-- Vorbereitung der Leistungsfeststellung



-- Vergleichsoperatoren

-- 1. alle lieferungen mit einer liefermege von mindestens 230 Stück
SELECT * FROM lieferung
WHERE lmenge >= 230;

-- 2. gesucht sind alle Lieferanten deren Status kleiner als 12 ist
SELECT * FROM lieferant
WHERE status < 12;

-- 3. Gesucht sind alle Artikel deren Gewicht kleiner als 15 gramm ist
SELECT * FROM artikel
WHERE gewicht < 15;

-- 4. alle lieferungen mit einer liefermege von maximal 300 Stück
SELECT * FROM lieferung
WHERE lmenge <= 300;

-- 5. Alle Artikel mit einer Lagermange von mindestens 800 Stück
SELECT * FROM artikel
WHERE amenge >= 800;




-- Schlüsselwort IN / BETWEEN

-- 1. gesucht sind die Namen der Hamburger und Aachener Lieferanten
SELECT lname, lstadt FROM lieferant
WHERE lstadt IN('Hamburg','Aachen');

-- 2. gesucht sind alle Lieferungen von 100,300 oder 400 Stück
SELECT * FROM lieferung
WHERE lmenge IN(100,300,400);

-- 3. gesucht sind alle roten und blauen Artikel
SELECT anr, farbe FROM artikel
WHERE farbe IN('rot','blau');

-- 4. gesucht sind alle Lieferungen die nicht zwischen dem 01.08.90 und dem 31.08.90 durchgeführt wurden
SELECT * FROM lieferung
WHERE ldatum NOT BETWEEN '01.08.1990' AND '31.08.1990'; 

-- 5. Die Daten aller Lieferungen von Lieferanten aus Ludwigshafen
SELECT * FROM lieferung
WHERE lnr IN (SELECT lnr from lieferant 
			  WHERE lstadt = 'Ludwigshafen');

-- 6. gesucht sind alle Artikel die nicht rot oder blau sind
SELECT * FROM artikel
WHERE farbe NOT IN('rot','blau');




-- Schlüsselwort LIKE

-- 1. gesucht sind alle Lieferanten deren Namen mit den Buchstaben A bis J beginnen
SELECT * FROM lieferant
WHERE lname LIKE '[A-J]%';

-- 2. gesucht sind alle Lieferanten in deren Namen kein a vorkommt
SELECT * FROM lieferant
WHERE lname NOT LIKE '%A%';

-- 3. gesucht sind alle roten Artikel die mit dem Buchstaben S beginnen
SELECT * FROM artikel
WHERE aname LIKE 'S%'
AND farbe = 'rot';

-- 4. gesucht sind alle Artikel die mit dem Buchstabe e enden
SELECT * FROM artikel
WHERE aname LIKE '%e';

-- 5. Schreibe eine Abfrage die alle Lieferanten ausgibt, deren Namen mit A oder S beginnen
SELECT * FROM lieferant
WHERE lname LIKE 'A%'
OR lname LIKE 'S%';

SELECT * FROM lieferant
WHERE lname LIKE '[AS]%'




-- Sortieren mit Aggregatfunktionen

-- 1. Die durchschnittsmenge aller gelagerten artikel
SELECT AVG(amenge) AS 'durchschnittsmenge' FROM artikel;

-- 2. Gesucht sind alle Lieferanten mit dem höchsten Status.
SELECT lname,status FROM lieferant
GROUP BY lname, status
HAVING status = (SELECT MAX(status) FROM lieferant);

-- oder

SELECT lnr, lname ,status FROM lieferant
WHERE status = (SELECT MAX(status) FROM lieferant);

-- 3. gesucht sind die Lieferanten, deren Status über dem durchschnittlichen 
--    Status aller Lieferanten liegt 
SELECT lname, status FROM lieferant
GROUP BY lname, status
HAVING status > (SELECT AVG(status) FROM lieferant);

-- oder

SELECT * FROM lieferant
WHERE status > (SELECT AVG(status) FROM lieferant);


-- 4. gesucht sind die Lieferanten, die mindestens dreimal geliefert haben
SELECT lnr, lname FROM lieferant
WHERE lnr IN(SELECT lnr FROM lieferung
			GROUP BY lnr
			HAVING COUNT(lnr) >= 3);

-- oder
SELECT DISTINCT lnr FROM lieferung a
WHERE 3 <= (SELECT COUNT(lnr) FROM lieferung b
			WHERE a.lnr = b.lnr);



-- 5. Gesucht sind die Nummern, Namen, Gewicht und das durchschnittsgewicht aller Artikel
--    sowie die Differenz des Gewichtes jedes einzelnen Artikels zum 
--    Durchschnittsgewicht aller Artikel
SELECT anr, aname, gewicht, AVG(gewicht) AS 'durchschnitt', gewicht-(SELECT AVG(gewicht) FROM artikel) AS 'diff' FROM artikel
GROUP BY anr, aname, gewicht




-- EXISTS / NOT EXISTS
-- 1. gesucht sind Lieferanten, die bereits geliefert haben
SELECT * FROM lieferant
WHERE EXISTS(SELECT * FROM lieferung
			 WHERE lieferant.lnr = lieferung.lnr);

-- 2. gesucht sind Ortsnamen, die Wohnort aber nicht Lagerort sind
SELECT lstadt FROM lieferant
WHERE NOT EXISTS(SELECT * FROM artikel
				  WHERE lstadt = astadt);


-- 3. Nummern aller Lieferanten, die mindestetns einen Artikel auslieferten, den auch der
--    Lieferant L02 ausgeliefert hat
SELECT DISTINCT lnr FROM lieferant
WHERE EXISTS(SELECT * FROM lieferung
			 WHERE lieferant.lnr = lieferung.lnr
			 AND anr IN(SELECT anr FROM lieferung WHERE lnr = 'L02'));


-- 4. gesucht sind die nummern und Namen der Lieferanten die geliefert haben
SELECT lnr, lname FROM lieferant
WHERE EXISTS(SELECT * FROM lieferung
			  WHERE lieferant.lnr = lieferung.lnr);


-- 5. Lagerorte der Artikel, die von Lieferant L02 geliefert wurden
SELECT astadt FROM artikel
WHERE EXISTS(SELECT * FROM lieferung
			 WHERE artikel.anr = lieferung.anr
			 AND lnr = 'L02');



-- auflisten TOP 
-- 1. gesucht sind die drei Lieferungen mit den höchsten Liefermengen
SELECT TOP(3) * FROM lieferung
ORDER BY lmenge DESC;

-- 2. gesucht sind alle Werte der vier Lieferanten mit dem höchsten status
SELECT TOP(4) * FROM lieferant
ORDER BY status DESC;

-- 3. gesucht sind die fünf Lieferanten mit dem niedrigsten status
SELECT TOP(5) * FROM lieferant
ORDER BY status ASC;

 
-- gruppieren  ORDER BY / GROUP BY / HAVING
-- 1. gesucht sind die kleinste Liefermenge eines jeden Lieferanten
SELECT lnr, MIN(lmenge) AS 'kleinste Lieferung' FROM lieferung
GROUP BY lnr;


-- 2. gesucht ist die größte Lieferung eines jeden Lieferanten nach dem 01.08.90
SELECT lnr, MAX(lmenge) AS 'größste Lieferung', ldatum FROM lieferung
GROUP BY lnr, ldatum
HAVING ldatum > '01.08.1990';

-- oder
SELECT lnr, MAX(lmenge) AS 'größste Lieferung' FROM lieferung
WHERE ldatum > '01.08.1990'
GROUP BY lnr


-- 3. Nummern aller Lieferanten, die mehr als eine Artikel geliefert haben
SELECT lnr, COUNT(anr) FROM lieferung
GROUP BY lnr
HAVING COUNT(anr) > 1;



-- 4. Lieferantennummern und Namen, die alle Artikel geliefert haben
SELECT lnr, lname FROM lieferant
WHERE lnr IN( SELECT lnr FROM lieferung
			  GROUP BY lnr
			  HAVING COUNT(anr) >= (SELECT COUNT(anr) FROM artikel));

-- oder
SELECT b.lnr, lname FROM lieferant a JOIN lieferung b
ON a.lnr = b.lnr
GROUP BY b.lnr, lname
HAVING COUNT(b.anr) >= (SELECT COUNT(anr) FROM artikel)



-- 5. Nummern und namen aller artikel,deren durchschnittliche Liefermenge kleiner als die
--    von artikel A03 ist
SELECT anr, aname FROM artikel
WHERE anr IN(SELECT anr FROM lieferung
			 GROUP BY anr
			 HAVING AVG(lmenge) < ( SELECT AVG(lmenge) FROM lieferung 
									WHERE anr = 'A03'));
-- oder

SELECT a.anr, aname FROM artikel a JOIN lieferung b
ON a.anr = b.anr
GROUP BY a.anr, aname
HAVING AVG(lmenge) < ( SELECT AVG(lmenge) FROM lieferung 
									WHERE anr = 'A03' );


-- INNER JOIN
-- 1. gesucht sind die lieferanten und ihre lieferungen
SELECT * FROM lieferant a JOIN lieferung b
ON a.lnr = b.lnr ;

-- TBD --
-- 2. gesucht sind die Lieferanten, die in einer stadt wohnen, in welcher auch andere
--    Lieferanten wohnen
SELECT a.* FROM lieferant a JOIN lieferant b
ON a.lstadt = b.lstadt 
AND a.lnr != b.lnr ;

SELECT DISTINCT * FROM lieferant a JOIN lieferant b
ON a.lstadt = b.lstadt;

-- 3. Artikelnummer, Artikelname und Lieferantennummer sowie die Lieferantennamen der 
--    Lieferanten mit Übereinstimmenden Wohn und Lagerort
SELECT DISTINCT anr, aname, lnr, lname FROM artikel JOIN lieferant
ON astadt = lstadt;

-- 4. Nummern aller Lieferanten, die mindestens einen Artikel geliefert
--    haben den auch Lieferant L03 geliefert hat.
SELECT * FROM lieferant a JOIN lieferung b
ON a.lnr = b.lnr
WHERE anr IN(SELECT anr FROM lieferung WHERE lnr = 'L03');
-- alternativ to add AND a.lnr != 'L03' to unshown L03 itself

-- 5. Nummern aller Lieferanten, die mehr als eine Artikel geliefert haben
SELECT a.lnr FROM lieferant a JOIN lieferung b
ON a.lnr = b.lnr
GROUP BY a.lnr
HAVING COUNT(b.lnr) > 1;

-- oder
SELECT lnr FROM lieferung a JOIN artikel b
ON a.anr = b.anr
GROUP BY a.lnr
HAVING COUNT(b.anr) > 1;


-- OUTER JOIN

-- 1. gesucht sind alle Lieferungen und Lieferanten, die diese Lieferung durchgeführt haben.
--    Weiterhin sollen alle Lieferungen angezeigt werden, für die kein Lieferant existiert
SELECT * FROM lieferant a LEFT JOIN lieferung b
ON a.lnr = b.lnr

-- oder
SELECT a.*, lname, lstadt, status FROM lieferung a RIGHT JOIN lieferant b
ON a.lnr = b.lnr



-- 2. gesucht sind alle lieferanten und die von ihnen ausgeführten Lieferungen 
--    Es sollen aber auch die Lieferanten angezeigt werden, die noch nicht geliefert haben
SELECT * FROM lieferant a LEFT JOIN lieferung b
ON a.lnr = b.lnr

-- 3. gesucht sind alle Lieferanten und deren Lieferungen, außerdem sollen die Lieferanten
--    angezeigt werden, die noch nicht geliefert haben, aber auch die Lieferungen
--    für die es keine Lieferanten gibt
SELECT * FROM lieferant a FULL JOIN lieferung b
ON a.lnr = b.lnr

 
-- CASE / Sätze

/*
1. Die Menge der gelagerten Artikel soll in einer Tabelle „Bestand“ ausgegeben werden. 
   Sollte die Menge eines Artikels 200 oder weniger betragen muss nachbestellt werden, 
   bis 800 Stück sind ausreichend viele Artikel im Lager. Alle Artikel deren Lagerbestand 
   über 1000 Stück liegen, sollen ins Angebot genommen werden. 
*/

SELECT amenge,
CASE
	WHEN amenge <= 200 THEN 'nachbestellen'
	WHEN amenge BETWEEN 201 AND 800 THEN 'ausreichend'
	ELSE 'ins Angebot'
END AS 'Bestand'
FROM artikel;


/*
2. Die Menge der gelieferten Artikel soll in einer Tabelle „auslieferung“ ausgegeben werden. 
   Sollte die Menge eines Artikels 200 oder weniger betragen muss mehr aufgeladen werden, 
   bis 300 Stück sind ausreichend viele Artikel im LKW. Alle Artikel deren Liefermenge
   über 400 Stück liegen, sollen die Fahrer direkt angezeigt werden. 
*/
SELECT lmenge,
CASE
	WHEN lmenge <= 200 THEN 'aufladen'
	WHEN lmenge BETWEEN 201 AND 300 THEN 'ausreichend'
	ELSE 'anzeigen'
END AS 'Auslieferung'
FROM lieferung;


-- 3. Schreibe eine Abfrage die folgenden Satz ausgibt:
--    Die Schraube mit der Artikelnummer A03 ist blau und wird in Mannheim gelagert
SELECT 'Die '+ aname + ' mit der Artikelnummer '+ anr + ' ist ' + farbe + ' und wird in ' + astadt + ' gelagert' FROM artikel
WHERE anr = 'A03'
AND farbe = 'blau'
AND astadt = 'Mannheim';


/*
4. Schreibe eine Abfrage die folgenden Satz ausgibt:
   Der Lieferant Jonas mit der Lieferantennummer L02 wohnt in Ludwigshafen und 
   sein status liegt bei 10.
*/
SELECT 'Der lieferant '+ lname + ' mit der Lieferantennummer ' + lnr + ' wohnt in ' + lstadt + ' und sein Status liegt bei' + CAST(status AS CHAR(3)) FROM lieferant
WHERE lname = 'Jonas'
AND lnr = 'L02'
AND lstadt = 'Ludwigshafen'
AND status = 10;


-- oder

SELECT 'Der lieferant '+ lname + ' mit der Lieferantennummer ' + lnr + ' wohnt in ' + lstadt + ' und sein Status liegt bei ',Status FROM lieferant
WHERE lname = 'Jonas'
AND lnr = 'L02'
AND lstadt = 'Ludwigshafen'
AND status = 10;


-- 5. Schreibe eine Abfrage die folgenden Satz ausgibt:
--    In Mannheim müssten noch 400 Artikel mit der farbe blau lagern
SELECT 'In '+ astadt + ' müssen noch ' + CAST(amenge AS CHAR(5)) + 'Artikel mit der Farbe ' + farbe + ' lagern' FROM artikel
WHERE amenge = 400
AND farbe = 'blau'
AND astadt = 'Mannheim';






-------------------------------------------------------


-- 1. Nummern und Namen sowie der Wohnort aller Lieferanten, die 4 verschiedene Artikel geliefert haben
SELECT DISTINCT a.lnr, lname, lstadt FROM lieferant a JOIN lieferung b
ON a.lnr = b.lnr
WHERE 4 = b.COUNT(anr)


IN(SELECT anr FROM lieferung GROUP BY anr HAVING COUNT(anr) = 4)

/*
2. Nummern, Namen und Status aller Lieferanten,
   die schon einmal geliefert haben, aber den Artikel A01 nicht lieferten
3. Die Daten aller Lieferanten, die alle Artikel mindestens einmal lieferten
4. Anzahl der Lieferungen, die seit dem 01.06.1990 von Lieferanten aus Hamburg
   durchgeführt wurden
5. Gesamtliefermenge aller Lieferungen des Artikels A01 durch den Lieferanten L02
6. Die Daten aller Lieferanten aus Hamburg
7. die Nummern, Namen und Lagerorte aller gelieferten Artikel
8. die Nummern und Namen aller artikel sowie ihr Gewicht in Kg
9. durchschnittliche Liefermenge des artikels A03
10. Die Daten aller Lieferanten, mit einem Status zwischen 20 und 40
11. Die Namen und das Gewicht aller Artikel, wenn ihr Gewicht 17 oder 19 gramm beträgt
12. Artikelnamen und Artikelnummern sowie die Lieferantennummern mit übereinstimmenden
   Wohn und Lagerort
13. Nummern und Namen aller Lieferanten, die die selben Artikel wie Lieferant L03 geliefert haben
14. Lagerorte der Artikel, die von Lieferant L05 ausgeliefert wurden
15. die Namen aller Orte die Lagerort und Wohnort zugleich sind.
16. Der Tabelle Lieferant soll eine neue Spalte Familienstand(nvarchar) hinzugefügt werden. 
*/
